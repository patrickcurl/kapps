# This file is a golang template. Variable values come from the final set of
# variables applicable to the stack/profile/cluster/etc that you install this
# kapp into.

templates:
  rbac:
    source: k8s/rbac.tpl.yaml
    dest: k8s/_generated_rbac.yaml

# These will be passed as env vars as well as any explicitly declared
vars:
  service_account: tiller
  tiller_namespace: kube-system
  role: ClusterRole
  role_name: cluster-admin
  role_binding: ClusterRoleBinding

requires:
  - kubectl
  - helm

# this uses the helm binary but doesn't use the default run steps
run_units:
  helm:
    working_dir: "{{ .kapp.cacheRoot }}/{{ .kapp.vars.main_kapp_dir }}"       # directory to use as the working directory
    plan_install:           # define a no-op run step to override the default one (that lints helm charts)
      - name: replace-default
        command: echo
        args: nothing to plan
    apply_install:
      - name: install RBAC
        command: "{{ .kapp.vars.kubectl }}"
        args: |
          --context={{ .kapp.vars.kube_context }}
          --namespace={{ .kapp.vars.tiller_namespace }}
          apply
          -f={{ .kapp.templates.rbac.rendered_path }}
        env_vars:
          KUBECONFIG: "{{ .kapp.vars.kubeconfig }}"
      - name: install tiller
        command: "{{ .kapp.vars.helm }}"
        args: |
          --kube-context={{ .kapp.vars.kube_context }}
          --service-account={{ .kapp.vars.service_account }}
          --tiller-namespace={{ .kapp.vars.tiller_namespace }}
          init
          --wait
          --upgrade
        env_vars:
          KUBECONFIG: "{{ .kapp.vars.kubeconfig }}"
    plan_delete:
    apply_delete:
      - name: uninstall tiller
        command: "{{ .kapp.vars.helm }}"
        args: |
          --kube-context={{ .kapp.vars.kube_context }}
          --tiller-namespace={{ .kapp.vars.tiller_namespace }}
          reset
        env_vars:
          KUBECONFIG: "{{ .kapp.vars.kubeconfig }}"
      - name: delete service account role binding
        command: "{{ .kapp.vars.kubectl }}"
        args: |
          --context={{ .kapp.vars.kube_context }}
          --namespace={{ .kapp.vars.tiller_namespace }}
          delete
          {{ .kapp.vars.role_binding }}
          {{ .kapp.vars.service_account }}
        env_vars:
          KUBECONFIG: "{{ .kapp.vars.kubeconfig }}"
      - name: delete service account
        command: "{{ .kapp.vars.kubectl }}"
        args:
          --context={{ .kapp.vars.kube_context }}
          --namespace={{ .kapp.vars.tiller_namespace }}
          delete
          ServiceAccount
          {{ .kapp.vars.service_account }}
        env_vars:
          KUBECONFIG: "{{ .kapp.vars.kubeconfig }}"
